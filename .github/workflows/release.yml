name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    name: 'Release NPM, GitHub, Docker'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 13
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Regenerate docs
        run: npm run docs
      - name: Generate README ToC
        run: npm run gen-readme-toc
      - name: Regenerate types
        run: npm run types
      - name: Generate bundle.js for the browser
        run: npm run prepublishOnly
      - name: Get version from package.json before release step
        id: initversion
        run: echo "::set-output name=version::$(npm run get-version --silent)"
      - name: Release to NPM and GitHub
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: asyncapi-bot
          GIT_AUTHOR_EMAIL: info@asyncapi.io
          GIT_COMMITTER_NAME: asyncapi-bot
          GIT_COMMITTER_EMAIL: info@asyncapi.io
        run: npm run release
      - name: Get version from package.json after release step
        id: extractver
        #npm is slow and has delays it is better to sleep here a bit to be 100% sure the next step that relies on npm gets latest value
        run: |
          sleep 1m
          echo "::set-output name=version::$(npm run get-version --silent)"
      - name: Check if version changed  # Version check based on package.json version number
        uses: EndBug/version-check@v1.6.0
        id: check
        with:
          #we need to do static check here because version-check action checks on local package.json from a commit from push event
          #and version from commiton push event is older than the one we just updated and pushed to npm
          file-url: https://unpkg.com/@asyncapi/parser@latest/package.json
          static-checking: remoteIsNew
      - name: Publish information about the release to Twitter # tweet only if detected version change is not a patch
        if: steps.check.outputs.changed == 'true' && steps.check.outputs.type != 'patch'
        uses: m1ner79/Github-Twittction@v1.0.1
        with:
          twitter_status: "Release ${{ steps.extractver.outputs.version }} for ${{github.repository}} is out in the wild üò±üí™üçæüéÇ\n\nThank you for the contribution ${{ github.event.commits[0].author.name }} https://github.com/${{github.repository}}/releases/tag/v${{ steps.extractver.outputs.version }}"
          twitter_consumer_key: ${{ secrets.TWITTER_CONSUMER_KEY }} 
          twitter_consumer_secret: ${{ secrets.TWITTER_CONSUMER_SECRET }} 
          twitter_access_token_key: ${{ secrets.TWITTER_ACCESS_TOKEN_KEY }} 
          twitter_access_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }} 
      - name: Create Pull Request with updated package files
        if: steps.initversion.outputs.version != steps.extractver.outputs.version
        uses: peter-evans/create-pull-request@v2.4.4
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: 'chore(release): ${{ steps.extractver.outputs.version }}'
          committer: asyncapi-bot <info@asyncapi.io>
          author: asyncapi-bot <info@asyncapi.io>
          title: 'chore(release): ${{ steps.extractver.outputs.version }}'
          body: 'Version bump in package.json and package-lock.json for release [${{ steps.extractver.outputs.version }}](https://github.com/${{github.repository}}/releases/tag/v${{ steps.extractver.outputs.version }})'
          branch: version-bump/${{ steps.extractver.outputs.version }}