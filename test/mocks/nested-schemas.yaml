asyncapi: '2.0.0'
info:
  title: AsyncAPi Document with Nested schemas
  version: 0.1.0
channels:
  test:
    parameters:
      testParam1:
        schema:
          $id: testParamSchema
          type: object
          test: true
          properties:
            testParamNestedSchemaProp:
              $id: testParamNestedSchemaProp
              type: object
              test: true
              properties:
                testParamNestedNestedSchemaProp2:
                  $id: testParamNestedNestedSchemaProp2
                  test: true
                  type: string
    publish:
      message:
        headers:
          $id: testHeaderSchema
          type: object
          test: true
          properties:
            testHeaderNestedSchemaProp:
              $id: testHeaderNestedSchemaProp
              type: object
              test: true
              properties:
                testprop2:
                  $id: testHeaderNestedNestedSchemaProp1
                  test: true
                  type: string
            testHeaderNestedSchemaPropArray:
              $id: testHeaderNestedSchemaPropArray
              type: array
              test: true
              items:
              - $id: testHeaderNestedSchemaPropArrayProp1
                test: true
                type: string
        payload:
          $id: testPayloadSchema
          type: object
          test: true
          properties:
            testPayloadNestedSchemaProp:
              $id: testPayloadNestedSchemaProp
              type: object
              test: true
              properties:
                testPayloadNestedNestedSchemaProp1:
                  $id: testPayloadNestedNestedSchemaProp1
                  test: true
                  type: string
            testPayloadNestedSchemaPropArray:
              $id: testPayloadNestedSchemaPropArray
              type: array
              test: true
              items:
              - $id: testPayloadNestedSchemaPropArrayProp1
                test: true
                type: string
  test2:
    subscribe:
      message:
        payload:
          $id: testPayload
          test: true
          k: 2
components:
  schemas:
    testSchema:
      $id: testComponentSchemaSchema
      type: object
      test: true
      properties:
        testprop:
          $id: testComponentSchemaNestedSchemaPropAllOf
          test: true
          allOf:
          - $id: testComponentSchemaNestedSchemaPropAllOfSchema1
            type: object
            test: true
            properties:
              testprop1:
                $id: testComponentSchemaNestedSchemaPropAllOfSchema1Prop1
                test: true
                type: string
          - $id: testComponentSchemaNestedSchemaPropAllOfSchema2
            type: object
            test: true
            properties:
              testprop2:
                $id: testComponentSchemaNestedSchemaPropAllOfSchema2Prop1
                test: true
                type: string
        testArray:
          $id: testComponentSchemaNestedSchemaPropArray
          type: array
          test: true
          items:
          - $id: testComponentSchemaNestedSchemaPropArrayProp1
            test: true
            type: string
          - $id: testComponentSchemaNestedSchemaPropArrayProp2
            test: true
            type: string
        testPatternProperties:
          $id: testComponentSchemaNestedSchemaPropPatternProperties
          type: object
          test: true
          patternProperties:
            "^S_":
              $id: testComponentSchemaNestedSchemaPropPatternPropertiesProp1
              test: true
              type: string
            "^N_":
              $id: testComponentSchemaNestedSchemaPropPatternPropertiesProp2
              test: true
              type: number
        testConditional:
          $id: testComponentSchemaNestedSchemaPropConditional
          type: string
          test: true
          if:
            $id: testComponentSchemaNestedSchemaPropConditionalIf
            test: true
            type: string
          then:
            $id: testComponentSchemaNestedSchemaPropConditionalThen
            test: true
            type: number
          else:
            $id: testComponentSchemaNestedSchemaPropConditionalElse
            test: true
            type: boolean
        testDependencies:
          $id: testComponentSchemaNestedSchemaPropDependencies
          type: string
          test: true
          dependencies:
            dep1:
              $id: testComponentSchemaNestedSchemaPropDependenciesDep1
              test: true
              type: string
            dep2:
            - test1
            - test2
            dep3:
              $id: testComponentSchemaNestedSchemaPropDependenciesDep3
              test: true
              type: number
        testDefinitions:
          $id: testComponentSchemaNestedSchemaPropDefinitions
          type: string
          test: true
          definitions:
            def1:
              $id: testComponentSchemaNestedSchemaPropDefinitionsDef1
              test: true
              type: string
            def2:
              $id: testComponentSchemaNestedSchemaPropDefinitionsDef2
              test: true
              type: number
        testMisc:
          $id: testComponentSchemaNestedSchemaPropMisc
          type:
          - object
          - array
          test: true
          not:
            $id: testComponentSchemaNestedSchemaPropMiscNot
            test: true
            type: string
          propertyNames:
            $id: testComponentSchemaNestedSchemaPropMiscPropertyNames
            test: true
            type: string
          contains:
            $id: testComponentSchemaNestedSchemaPropMiscContains
            test: true
            type: string
